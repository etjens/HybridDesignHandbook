{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # github.com\
\
# github link: https://github.com/etjens/HybridDesignHandbook.git\
\
## Cloning a directory to your local machine (this is usually just a one-off processes)\
# change to home directory\
cd ~/Documents\
mkdir HybridBook\
cd HybridBook\
git clone https://github.com/etjens/HybridDesignHandbook.git\
cd HybridDesignHandbook\
\
## What is my remote repository (run this whenever you want)?\
git remote -v\
\
# set up git account details so git knows who is making changes\
# (these are one-off type of commands)\
  git config --global user.email "you@example.com"\
  git config --global user.name "Your Name"\
  \
  \
## Pushing our first file to remote\
# create an empty file called "test.txt"\
touch test.txt\
ls\
open test.txt\
# add some text, whatever you want, save and close\
\
# check out what you have changed since your last commit\
git status\
\
# register, stage, or add those changes to a commit\
git add test.txt\
git status\
\
# If you want to add all new files\
# NOTE: this is often inadvisable as there are often many files\
# that you don't want to commit - esp. for latex files where you only need to commit .tex, .bib and .sty\
git add *\
# commit your changes locally\
# this only makes a commit on your local machine, it does not \
# "push" the changes to the remote repository for everyone else\
# It may not seem useful, but it is\
git commit -m "making my first commit!!!!"\
git status\
\
## push our changes to remote repository\
git push origin master\
\
\
## Pulling new changes from others\
\
# check what new changes have been made- note that this tells you number of new commits, not the specific files that have changed\
git fetch origin master\
git status\
\
# pull in new changes (fetch + merge)\
git pull origin master\
\
## Looking at history of what has changed\
git log\
# Note you can hit q to get out of the log less\
git log | less\
\
\
## Making further commits to an existing document\
# Open the document, make some changes, save, and close\
\
# stage all changes that have been made to files that are already tracked:\
git add -u\
git commit -m "(whatever you want to say)"\
git push origin master\
\
#### Things yet to be covered\
## Using checkout to "rollback" to a working point in the history\
## Resolving a conflicted file\
## Advanced topic: branching, upstream, etc}